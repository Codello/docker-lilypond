name: Docker Image
on: push

env:
  REPO: codello/lilypond
  default_target: fonts

jobs:
  build:
    name: Build ${{ matrix.lilypond.version || matrix.lilypond }} ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lilypond:
          - "2.22.1"
          - "2.23.3"
        target: [ "", "basic", "shell" ]
        include:
          - lilypond: "2.22.1"
            tags: [ "2.22", latest ]
          - lilypond: "2.23.3"
            tags: [ "2.23", "dev" ]
    env:
      VERSION: ${{ matrix.lilypond }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build Image
        run: |
          docker build --target ${{ matrix.target || env.default_target }} --build-arg VERSION="${{ matrix.lilypond }}" --tag "$REPO:$VERSION" .
      - name: Test Image
        run: |
          if [[ "${{ matrix.target }}" = "shell" ]]; then
            docker run -v $(pwd):/ly "$REPO:$VERSION" lilypond test.ly
          else
            docker run -v $(pwd):/ly "$REPO:$VERSION" test.ly
          fi
          test -f test.pdf
      - name: Add Additional Tags
        if: matrix.tags
        run: |
          for TAG in ${{ join(matrix.tags, ' ') }}; do
            docker tag "$REPO:$VERSION" "$REPO:$TAG"
          done
      - name: Rename Tags
        if: matrix.target != ''
        run: |
          TAGS=$(docker image inspect -f '{{ range $index, $tag := .RepoTags }}{{if $index}} {{end}}{{$tag}}{{end}}' "$REPO:$VERSION")
          for TAG in $TAGS; do
            if [[ "$TAG" = "$REPO:latest" ]]; then
              NEW_TAG="$REPO:${{ matrix.target }}"
            else
              NEW_TAG="$TAG-${{ matrix.target }}"
            fi
            docker tag "$TAG" "$NEW_TAG"
            docker rmi "$TAG"
          done
      - name: Push Image
        if: github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push "$REPO" --all-tags
